{"version":3,"sources":["components/Favorite.js","components/Header.js","components/Add.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Favorite","props","state","className","this","favoriteCity","map","e","index","to","name","id","degree","description","type","onClick","del","Component","Header","placeholder","onChange","handleCityName","get","Add","add","src","dayIcon","alt","day1","i","moment","Date","format","Day","Icon","Temperature","Maximum","Value","Unit","Minimum","Main","city","days","key","App","citySearch","iD","addFavoriteCity","setState","length","alert","delFav","filter","element","target","value","getWeather","a","fetch","api_cal","json","data","forEach","Key","LocalizedName","api_cal1","data1","WeatherText","Metric","WeatherIcon","api_cal2","data2","DailyForecasts","defaultWeather","api_cal0","data0","api_cal8","data8","api_cal9","data9","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a37b5300.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './Favorite.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Favorite extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    // showing your favorite city in button , you can click and see the weather condition\r\n    render() {\r\n        return (\r\n            <div className='App'>\r\n                <br/>\r\n                <div className=\"container rounded text-black \">\r\n                    <br/>\r\n                    {this.props.favoriteCity.map((e,index)=>{\r\n                    return(\r\n                    <div className='div3'>\r\n                        <Link to={`/Add/${e.name}`}><button className='btn btn-info' id='button'>\r\n                            {e.name} \r\n                            <hr></hr>\r\n                            {e.degree} \r\n                            <hr></hr>\r\n                            {e.description}\r\n                        </button>\r\n                        </Link>\r\n                        <button type='button' className='btn btn-danger' id='removebutton' onClick={()=>{this.props.del(index)}}>Remove from Favorites</button>\r\n                    </div>\r\n                    )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './Header.css'\r\n\r\nexport default class Header extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n        <div className = 'App'>\r\n            <h1 className='m-5'>Safadi Weather Forcast</h1>\r\n            <input type='replacment' placeholder='Enter your city' className='search-bar'  onChange={this.props.handleCityName} />\r\n            <Link to = '/Weather'><button id='getWeather' onClick={this.props.get}>üîç</button></Link>\r\n            <br/>\r\n            <br/>\r\n            <Link to='/'><button type='button' className='btn btn-warning' id='Button'>Home</button></Link>\r\n            <Link to='/Favorite'><button type='button' className='btn btn-success' id='Buttons' >Favorite</button></Link>\r\n        </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport moment from 'moment'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Add extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n    // showing the weather condition of your favorite city\r\n    render() {\r\n        return (\r\n            <div className='App'>\r\n                <br/>\r\n            <div className=\"container rounded text-black \">\r\n                <Link to='/Favorite'> <button onClick={()=>{this.props.add(this.props.favoriteCity.name,this.props.favoriteCity.description,this.props.favoriteCity)}} type='button' className='btn btn-info' id='addbutton'> Add to Favorites </button></Link>   \r\n                <h4 id='top-weather'>{this.props.name}</h4>\r\n                <h4 id='degree'>{this.props.degree}</h4>\r\n                <br/>\r\n                <img className=\"small-image\" src={`https://developer.accuweather.com/sites/default/files/${this.props.dayIcon >= 10 ? this.props.dayIcon : \"0\" + this.props.dayIcon}-s.png`} alt=\"\"/>\r\n                <h2 id='description'>{this.props.description}</h2>\r\n                <hr></hr>\r\n                {this.props.day1.map((e,i)=>{\r\n                    return (\r\n                    <div className='single-day'>\r\n                        <br></br>\r\n                        <p>{moment(e.Date).format('dddd')}</p>\r\n                        <p>{moment(e.Date).format('Do MMM YY')}</p>\r\n                        <img className=\"smal-image\" src={`https://developer.accuweather.com/sites/default/files/${e.Day.Icon >= 10 ? e.Day.Icon : \"0\" + e.Day.Icon}-s.png`} alt=\"\"/>\r\n                        <hr></hr>\r\n                        <p> Maxtemp : {e.Temperature.Maximum.Value}&deg;{e.Temperature.Maximum.Unit}</p>\r\n                        <hr></hr>\r\n                        <p> Mintemp : {e.Temperature.Minimum.Value}&deg;{e.Temperature.Maximum.Unit}</p>\r\n                    </div>\r\n                    )\r\n                })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport './Main.css'\r\nimport moment from 'moment'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             city:props.city,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='App'>\r\n                <br/>\r\n            <div className=\"container rounded text-black \">\r\n                <Link to='/Favorite'> <button onClick={()=>{this.props.add(this.props.favoriteCity.name,this.props.favoriteCity.description,this.props.favoriteCity)}} type='button' className='btn btn-info' id='addbutton'> Add to Favorites </button></Link>   \r\n                <h4 id='top-weather'>{this.props.name}</h4>\r\n                <h4 id='degree'> {this.props.degree} </h4>\r\n                <br/>\r\n                <img className=\"small-image\" src={`https://developer.accuweather.com/sites/default/files/${this.props.dayIcon >= 10 ? this.props.dayIcon : \"0\" + this.props.dayIcon}-s.png`} alt=\"\"/>\r\n                <h2 id='description'>{this.props.description}</h2>\r\n                <hr></hr>\r\n                {this.props.days.map((e,i)=>{\r\n                    return (\r\n                    <div className='single-day'>\r\n                        <br></br>\r\n                        <p>{moment(e.Date).format('dddd')}</p>\r\n                        <p>{moment(e.Date).format('Do MMM YY')}</p>\r\n                        <img className=\"smal-image\" src={`https://developer.accuweather.com/sites/default/files/${e.Day.Icon >= 10 ? e.Day.Icon : \"0\" + e.Day.Icon}-s.png`} alt=\"\"/>\r\n                        <hr></hr>\r\n                        <p> Maxtemp : {e.Temperature.Maximum.Value}&deg;{e.Temperature.Maximum.Unit}</p>\r\n                        <hr></hr>\r\n                        <p> Mintemp : {e.Temperature.Minimum.Value}&deg;{e.Temperature.Maximum.Unit}</p>\r\n                    </div>\r\n                    )\r\n                })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// <div className=\"d-flex p-2 bd-highlight justify-content-center top-weather\">\r\n// <div className=\"flex-row bd-highlight\">\r\n//   <h4>{selectedCity}</h4>\r\n//   <Moment format=\"dddd\">{weatherData[selectedDay].Date}</Moment>\r\n//   <div className=\"flex-row bd-highlight\">\r\n//     <img\r\n//       src={`https://developer.accuweather.com/sites/default/files/${\r\n//         weatherData[selectedDay].Day.Icon >= 10\r\n//           ? weatherData[selectedDay].Day.Icon\r\n//           : \"0\" + weatherData[selectedDay].Day.Icon\r\n//       }-s.png`}\r\n//       alt=\"weather-icon\"\r\n//     />\r\n//     <p>{weatherData[selectedDay].Day.IconPhrase}</p>\r\n//   </div>\r\n// </div>\r\n// </div>","import React, { Component } from 'react'\nimport './App.css'\nimport {HashRouter as Router,Route,Switch} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Favorite from './components/Favorite'\nimport Header from './components/Header'\nimport Add from './components/Add'\nimport Main from './components/Main'\nconst key = 'n3Ez3CSARWohFcncTVnswEn09vAvm3Qr' // My Api Key\n\nexport default class App extends Component {\n\n  state = {\n    city:[],\n    citySearch:'',\n    iD:'',\n    name:'',\n    degree:'',\n    description:'',\n    days:[],\n    favoriteCity : [] ,\n    dayIcon : [],\n  }\n\n  // Add Favorite City to new array\n  addFavoriteCity=()=>{\n    this.setState({\n      favoriteCity:[...this.state.favoriteCity,{iD:this.state.iD,name:this.state.name,description:this.state.description,degree:this.state.degree,day1:this.state.days}],\n    })\n    for(let i = 0 ; i<this.state.favoriteCity.length;i++){\n      if(this.state.name === this.state.favoriteCity[i].name){\n        alert('Your city is in favorite') \n        this.setState({favoriteCity:[...this.state.favoriteCity]})\n      }      \n    }\n  }\n\n  // Delete City from Favorites\n  del=(i)=>{\n    const delFav = this.state.favoriteCity.filter((element,index)=>(index!==i))\n    this.setState({favoriteCity:[...delFav]})\n  }\n\n  handleCityName = (element) => {\n    this.setState({citySearch:element.target.value})\n  }\n\n  // Get detailes of the city that you want to know her weather\n  getWeather = async () =>{\n      const api_cal = await fetch(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=n3Ez3CSARWohFcncTVnswEn09vAvm3Qr&q=${this.state.citySearch}&language=en-us`);\n      const data = await api_cal.json();    \n      this.setState({city:data});\n      this.state.city.forEach(element => {\n        this.setState({\n            iD:element.Key,name:element.LocalizedName\n        })\n      });\n      \n      // Get Current weather of the city you want\n      const api_cal1 = await fetch(`http://dataservice.accuweather.com/currentconditions/v1/${this.state.iD}?apikey=n3Ez3CSARWohFcncTVnswEn09vAvm3Qr&language=en-us`);\n      const data1 = await api_cal1.json(); \n      this.setState({\n        description:data1[0].WeatherText,\n        degree:data1[0].Temperature.Metric.Value + data1[0].Temperature.Metric.Unit,\n        dayIcon:data1[0].WeatherIcon\n      })  \n          \n      // Get the weather condition for the next 5 days\n      const api_cal2 = await fetch(` http://dataservice.accuweather.com/forecasts/v1/daily/5day/${this.state.iD}?apikey=n3Ez3CSARWohFcncTVnswEn09vAvm3Qr&language=en-us&metric=true`);\n      const data2 = await api_cal2.json(); \n      this.setState({\n        days:[...data2.DailyForecasts],\n      })\n        this.setState({city:[...data,data1,data2]});\n  }\n\n  defaultWeather = async () =>{\n    const api_cal0 = await fetch(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${key}&q=tel%20aviv&language=en-us`);\n    const data0 = await api_cal0.json();    \n    this.setState({city:data0});\n    this.state.city.forEach(element => {\n      this.setState({name:element.LocalizedName})\n    })\n    \n    // Get Current weather of the city you want\n    const api_cal8 = await fetch(`http://dataservice.accuweather.com/currentconditions/v1/215854?apikey=${key}&language=en-us`);\n    const data8 = await api_cal8.json(); \n    this.setState({description:data8[0].WeatherText,degree:data8[0].Temperature.Metric.Value + data8[0].Temperature.Metric.Unit})  \n        \n    // Get the weather condition for the next 5 days\n    const api_cal9 = await fetch(` http://dataservice.accuweather.com/forecasts/v1/daily/5day/215854?apikey=${key}&language=en-us&metric=true`);\n    const data9 = await api_cal9.json(); \n    this.setState({days:[...data9.DailyForecasts]})\n    this.setState({city:[...data0,data8,data9]});\n  }\n\n  render() {\n    return (\n      <div>\n          <Router>\n            <Header get={this.getWeather} handleCityName={this.handleCityName}/>\n            <Switch>\n              <Route exact path = '/Weather' component = {()=>{return <Main add={this.addFavoriteCity} favoriteCity={this.state.favoriteCity} days={this.state.days} name={this.state.name} description={this.state.description} degree={this.state.degree} dayIcon={this.state.dayIcon} />}}/>\n              <Route exact path='/Favorite' component = {()=>{return <Favorite del={this.del} favoriteCity={this.state.favoriteCity} />}}/>\n              {this.state.favoriteCity.map((e,i)=>{\n              return(\n                <Route exact path = {`/Add/${e.name}`} component = {()=>{return <Add name={e.name} degree={e.degree} description={e.description} day1={e.day1} index={i} dayIcon={this.state.dayIcon} city={this.state.city} />}}/>\n              )\n            })}\n            </Switch>\n          </Router>\n      </div>\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}